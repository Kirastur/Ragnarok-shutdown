#
# Welcome to the Ragnarök configuration settings
#
# - Per default, to lure out Ragnarök
# - the player must stay inside the worldguard region and 
# - must have the appropriate permission
# - when he executes the ragnarök command
#
# - Chain resolving is enabled, so indirects calls are allowed:
# - Player => Button => CommandBlock => Ragnarök
#
# - If this fails, nothing happens
#
# - The Region must be defined in WorldGuard.
# - The flags of the region do not matter (e.g. passthrough).   
#
# - Permission check is done by regular mincecraft permisson system.
# - (tested with LuckPerms)
# - The permission name also is hard coded in plugin.yml
# - so please change it here only if you know what you are doing.
# -
# -
# - Please see our Github Wiki for Documentation
# -      https://github.com/Kirastur/Ragnarok-shutdown/wiki
# -
# - Visit our homepage for more information
# -      https://www.spigotmc.org/resources/ragnar%C3%B6k-shutdown.90733
# -
# - For support you can contact us at discord.
# -      A link to discord can be found on our homepage


general:

  # Should Ragnarök exposes its API to other plugins
  #
  # - If enabled, other Plugins can get an API object by using
  # -  "RagnarokAPI ragnarokAPI = RagnarokProvider.getAPI();"
  enableAPI: false

  # Should Ragnarök print debug output to the server console
  enableDebugOutput: false
  
  
sequences:

  # -  Define the sequence how to celebrate the end of all things 
  shutdown:
    1:
      # Check if the caller has the permission to trigger a server shutdown
      # Respone to player is given in english or german, depending on the players locale
      action: check
      denymessage: "Sorry, you cannot challenge Ragnarök"
      denymessage_de: "Du kannst Ragnarök nicht herausfordern"
      check_region: ragnarok
      check_permission: ragnarök.acolyte

    2: 
      # Send a message to the server console
      action: info
      message: "Ragnarök was called ... be prepared"

    3:
      # Notify all server-admins with notify-permission who has triggered the shutdown
      # As you can see, you can use color-formatting-tags and placeholders here 
      action: notify
      message: "§cPlayer %NAME% has initiated a server shutdown" 
      message_de: "§cSpieler %NAME% hat einen Server-Shutdown gestartet" 
      include_permission: ragnarök.notify
      include_operator: yes
      include_console: yes

    4:
      # Send a Role-Play Message to all players
      # This is only a demonstration how to use a "command" action in LibSequence 
      action: command
      command: tellraw @a {"text":"Ragnarök is comming", "color":"gold"}

    5:
      # Now let's send the reminders to all players 
      action: broadcast
      message: "The server will stop in 1 minute"
      wait-after-action: 30

    6:
      # The block is automatically removed when the sequence stops or cancels
      action: block-new-logins

    7:
      # Send a big banner (title) to all players
      action: title
      title: "The server will stop"
      subtitle: "in 30 seconds"
      stay: 100
      include_all: yes
      wait-after-action: 10

    8:
      action: broadcast
      message: "The server will stop in 20 seconds"
      wait-after-action: 10

    9:
      action: broadcast
      message: "The server will stop in 10 seconds"
      wait-after-action: 10

    10:
      # Kick all players from the server
      # Wait 3 seconds before shutdown to let all logout-events run
      action: kickall
      wait-after-action: 3

    11:
      # Finally shutdown the server
      # This stops the minecraft-server, so no further steps will be executed
      action: shutdown


  # -  Cancel Ragnarök 
  cancel:
    1: 
      action: check
      denymessage: "You are too weak to fend off Ragnarök"
      denymessage_de: "Du bist zu schwach, um dich gegen Ragnarök zu wehren"
      check_region: ragnarok
      check_permission: ragnarök.acolyte
    2: 
      action: cancelshutdown
    3: 
      action: notify
      message: "§cPlayer %NAME% has cancelled a server shutdown" 
      message_de: "§cSpieler %NAME% hat einen Server-Shutdown widerrufen" 
      include_permission: ragnarök.notify
      include_operator: yes
      include_console: yes
    4:
      action: command
      command: tellraw @a {"text":"Ragnarök went back to his bed", "color":"gold"}
    5: 
      action: broadcast
      message: "The server-shutdown was cancelled"
 
 
 # -  Admin Abort Ragnarök 
  abort:
    1: 
      action: cancelshutdown
    2: 
      action: notify
      message: "§cAdministrator %NAME% has aborted a server shutdown" 
      message_de: "§cAdministrator %NAME% hat den Server-Shutdown abgebrochen" 
      include_permission: ragnarök.notify
      include_operator: yes
      include_console: yes
    3:
      action: command
      command: tellraw @a {"text":"Ragnarök went back to his bed", "color":"gold"}
    4: 
      action: broadcast
      message: "The server-shutdown was cancelled"
 